trigger:
# - stashArtifacts
- none
pool:
  vmImage: 'ubuntu-latest'
variables:
- group: PROXY_SETTINGS
- group: GitHub

stages:
- stage: 'Test'
  jobs:
  - job: TestJob
    steps:
    - script: |
        echo $pass
        echo $PROXY_USER
      env:
        pass: $(PROXY_PASS)
- stage: 'Build'
  jobs:
  - job: BuildJob
    steps:
    - checkout: self
      # Allow scripts to access the system token so that the pipeline can push git changes (eg. version bump)
      persistCredentials: true
    - script: |
        git config --global user.email "$(GH_USER_MAIL)"
        git config --global user.name "$(GH_USER_NAME)"
      displayName: "Configure git"
      # Checkout branch since by default Azure Pipelines do checkouts of specific commits (detached HEAD)
      # and we need to be at master to be able to push version bump changes.
      # We need to use a powershell script here to extract the proper branch name by removing 'refs/heads/' from the BUILD_SOURCEBRANCH variable
      # (eg. 'refs/heads/feature/feat-a' becomes 'feature/feat-a').
    - powershell: write-host "##vso[task.setvariable variable=branch]$($env:BUILD_SOURCEBRANCH.substring($env:BUILD_SOURCEBRANCH.indexOf('/', 5) + 1))"
      displayName: "Extract the branch name"
    - script: |
        git checkout $(branch)
        git status
      displayName: "Checkout branch"
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'release'
    - task: PublishPipelineArtifact@1
      inputs:
        path: $(System.DefaultWorkingDirectory)/build
        artifact: gradleBuild
- stage: ArchiveArtifacts
  pool:
    vmImage: windows-latest
  jobs:
  - job: 'ArchiveJob'
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifact: gradleBuild
        patterns: '**/*.jar'
    - script: 'echo "Pipeline.Workspace = $(Pipeline.Workspace)" ; ls -al $(Pipeline.Workspace)'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Pipeline.Workspace)/libs'
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    - task: AzureFileCopy@3
      inputs:
        sourcePath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        Destination: 'AzureBlob'
        azureSubscription: 'rcAzureRMConnection'
        storage: 'azurepocstorageforgradle'
        ContainerName: 'azurepocscontainerforgradle'

